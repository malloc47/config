# Going up directories
function ..(){ for ((j=${1:-1},i=0;i<j;i++));do builtin cd ..;done;}
alias ...='.. 2'
alias ....='.. 3'
alias .....='.. 4'
alias .......='.. 5'

alias rsyncr="rsync --partial --progress"

alias a1="awk '{print \$1}'"
alias a2="awk '{print \$2}'"
alias a3="awk '{print \$3}'"
alias a4="awk '{print \$4}'"
alias a5="awk '{print \$5}'"
alias a6="awk '{print \$6}'"
alias a7="awk '{print \$7}'"
alias a8="awk '{print \$8}'"
alias a9="awk '{print \$9}'"
alias a10="awk '{print \$10}'"
alias a11="awk '{print \$11}'"
alias a12="awk '{print \$12}'"
alias a13="awk '{print \$13}'"
alias a14="awk '{print \$14}'"
alias a15="awk '{print \$15}'"
alias a16="awk '{print \$16}'"
alias a17="awk '{print \$17}'"
alias a18="awk '{print \$18}'"
alias a19="awk '{print \$19}'"
alias a20="awk '{print \$20}'"

alias rand="od -N1 -An -i /dev/urandom"

alias h='history'

hs() { history | grep $1 ; }

# Ls after CD
cd() { if [[ -n "$1" ]]; then builtin cd "$1" && ls;
else builtin cd && ls; fi; }
,cd() { [[ -n "$1" ]] && builtin cd "$1" || builtin cd; }

xkcd(){ wget -qO- http://xkcd.com/|tee >(feh $(grep -Po '(?<=")http://imgs[^/]+/comics/[^"]+\.\w{3}'))|grep -Po '(?<=(\w{3})" title=").*(?=" alt)';}
#alias xkcd='feh `lynx --dump http://xkcd.com/| grep png`'

wiki() { dig +short txt "$*".wp.dg.cx; }

calc () { echo "$*" | bc -l; }

term-do ()  { /home/malloc47/src/projects/term-do/term-do "$*" ; builtin cd $(cat ~/.term-do.d/pwd); }

#http://hbfs.wordpress.com/2009/09/01/short-pwd-in-bash-prompts/
shorten_path()
 {
  x=${1}
  len=${#x}
  max_len=$2

  if [ $len -gt $max_len ] ; then
      pos=()
      for ((i=0;i<len;i++)) ; do
          if [ "${x:i:1}" == "/" ] ; then
              pos=(${pos[@]} $i)
          fi
      done
      pos=(${pos[@]} $len)
      i=0
      while [ $((len-pos[i])) -gt $((max_len-3)) ] ; do
          i=$((i+1))
      done
      if [ ${pos[i]} == 0 ] ; then
          echo ${x}

      elif [ ${pos[i]} == $len ] ; then
          echo ...${x:((len-max_len+3))}
      else
          echo ...${x:pos[i]}
      fi
  else
      echo ${x}
  fi
 }
